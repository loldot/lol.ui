name: Publish to NPM

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty for package.json version)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write # for npm provenance
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests (if any)
        run: npm test --if-present
        
      - name: Build library (production mode)
        run: |
          echo "Building library in production mode..."
          npm run build
        
      - name: Verify build output
        run: |
          echo "Checking dist directory..."
          ls -la dist/
          echo "Checking file sizes and minification..."
          du -h dist/*.js
          echo "Verifying all required files exist..."
          test -f dist/lol-ui.es.js || (echo "Missing ES build" && exit 1)
          test -f dist/lol-ui.cjs.js || (echo "Missing CJS build" && exit 1)
          test -f dist/lol-ui.umd.js || (echo "Missing UMD build" && exit 1)
          test -f dist/index.d.ts || (echo "Missing TypeScript declarations" && exit 1)
          test -f dist/types.d.ts || (echo "Missing types entry point" && exit 1)
          echo "Verifying minified builds..."
          file dist/lol-ui.es.js | grep -q "ASCII text" || (echo "ES build not properly minified" && exit 1)
          echo "All build verification checks passed!"
          
      - name: Update version (if specified)
        if: github.event.inputs.version != ''
        run: npm version ${{ github.event.inputs.version }} --no-git-tag-version
        
      - name: Publish to NPM
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub release summary
        run: |
          echo "## ðŸš€ Published to NPM" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Package: \`@loldot/lol.ui\`" >> $GITHUB_STEP_SUMMARY
          echo "Version: \`$(node -p "require('./package.json').version")\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Install:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "npm install @loldot/lol.ui" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY